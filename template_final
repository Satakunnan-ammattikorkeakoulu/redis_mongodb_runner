import requests
import json

API = "http://68.219.210.74/api/v1/submit"
TOKEN = "supersecretkey"
__student_answer__ = """{{ STUDENT_ANSWER | e('py') }}"""
SEPARATOR = "#<ab@17943918#@>#"

# Process each test case
{% for TEST in TESTCASES %}
# Create a string with the student's answer plus any test code
commands = __student_answer__
{% if TEST.testcode %}
commands += "\n{{ TEST.testcode }}"
{% endif %}

# Send the commands to the Redis API
payload = {
    "database": "redis",
    "commands": commands
}
headers = {
    "Content-Type": "application/json",
    "Authorization": f"Bearer {TOKEN}"
}

try:
    res = requests.post(API, headers=headers, data=json.dumps(payload), timeout=5)
    #print(res.status_code) print 200
    
    if res.status_code == 200:
        response_data = res.json()
        output_lines = response_data.get("output", "").split("\n")
        
        # Filter out consecutive duplicate lines
        unique_output_lines = []
        for line in output_lines:
            if not unique_output_lines or line != unique_output_lines[-1]:
                unique_output_lines.append(line)
        
        # Process the filtered output
        if "{{ TEST.testcode }}" and "GET" in "{{ TEST.testcode }}":
            get_lines = [line for line in unique_output_lines if line.startswith("Value for key")]
            if get_lines:
                print(get_lines[-1])
            else:
                print("\n".join(unique_output_lines))
        else:
            print("\n".join(unique_output_lines))
    else:
        print(res.text)
except Exception as e:
    print("ERROR:", e)

{% if not loop.last %}
print(SEPARATOR)
{% endif %}
{% endfor %}