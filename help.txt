# NoSQL Cloud API - Quick Reference

This file provides step-by-step instructions and examples for using the API server
inside the Docker container.

---

## 1. Navigate to Project Directory
```bash
cd ~/nosql_cloud


---

## 2. Build the Docker Image

Rebuilds the image (⚠️ wipes old one):

./build


---

## 3. Run the Docker Container

Starts container and services:

./run


Services available:

* FastAPI:  [http://localhost:80/](http://localhost:80/)
* MongoDB:  localhost:27017
* Redis:    localhost:6379

---

## 4. Enter the Container (Optional)

Inspect inside:

docker exec -it nosql-docker /bin/bash


Inside you can run:

* `mongosh` → MongoDB shell
* `redis-cli` → Redis CLI
* Logs & code → `/app`

---

## 5. Test API Endpoint

### MongoDB Example

curl -X POST http://localhost:80/api/v1/submit \
  -H "Authorization: Bearer supersecretkey" \
  -H "Content-Type: application/json" \
  -d '{"database":"mongodb","commands":"db.users.insertOne({\"name\":\"Ann\"})\ndb.users.find({})"}'


### Redis Example


curl -X POST http://localhost:80/api/v1/submit \
  -H "Authorization: Bearer supersecretkey" \
  -H "Content-Type: application/json" \
  -d '{"database":"redis","commands":"SET key1 \"hello\"\nGET key1"}'


---

## 6. MongoDB Command Examples

### Insert Many


db.users.insertMany([
  { "name": "Alice", "age": 25 },
  { "name": "Bob",   "age": 30 }
])


### Update Many


db.users.updateMany(
  { "age": { "$gt": 20 } },
  { "$inc": { "age": 1 } }
)


### Delete Many


db.users.deleteMany({ "age": { "$lt": 18 } })


### Aggregate


db.orders.aggregate([
  { "$match": { "status": "A" } },
  { "$group": { "_id": "$cust_id", "total": { "$sum": "$amount" } } }
])


---

## 7. Redis Command Examples


SET user:1 "Alice"
GET user:1
DEL user:1

LPUSH mylist "a" "b" "c"
LRANGE mylist 0 -1

HSET user:1 name "Alice" age "25"
HGET user:1 name

SADD tags "red" "blue"
SCARD tags

ZADD scores 100 "Alice" 200 "Bob"
ZINCRBY scores 50 "Alice"


---

## 8. Troubleshooting

* **Port conflicts** → stop host DBs:

  sudo systemctl stop mongod redis-server
 
* **FastAPI not reachable**:

  systemctl status fastapi.service

* **Firewall** → open ports 80, 27017, 6379 (e.g., Azure NSG)
* **Invalid JSON errors** → always use **double quotes** (`"`) inside MongoDB documents.

---


